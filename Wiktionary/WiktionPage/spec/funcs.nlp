###############################################
# FILE: funcs.nlp
# SUBJ: Functions for the Portuguese Wiki page parser
# AUTH: David de Hilster
# CREATED: 2022-11-07 8:40:53
# MODIFIED:
###############################################

@DECL

AddWord(L("word"),L("lang"),L("node")) {
    L("pos") = PosStr(strtolower(pnvar(L("node"),"header")));
    "add.txt" << L("word") << " " << L("pos") << "\n";
    if (L("pos")) {
        L("con") = AddUniqueCon(G("words"),L("word"));
        L("meaning") = MakeCountCon(L("con"),"meaning");

        AddUniqueStr(L("meaning"),"pos",L("pos"));
        AddUniqueStr(L("meaning"),"lang",L("lang"));

        AddWordAttr(L("meaning"),"root",L("node"));
        AddWordAttr(L("meaning"),"pessoa",L("node"));
        AddWordAttr(L("meaning"),"numero",L("node"));
        AddWordAttr(L("meaning"),"tempo",L("node"));
    }
}

AddWordAttr(L("meaning"),L("attr"),L("node")) {
    L("at") = pnvar(L("node"),L("attr"));
    if (L("at")) {
        "at.txt" << conceptpath(L("meaning")) << " -- " << L("attr") << " " << L("at") << "\n";
        AddUniqueStr(L("meaning"),L("attr"),L("at"));
    }
}

PosStr(L("word")) {
    if (!L("word")) {
        return 0;
    }
    if (strcontainsnocase("verbal",L("word")) || strcontainsnocase("verbo",L("word"))) {
        return "v";
    }
    else if (strcontainsnocase("substantivo",L("word"))) {
        return "n";
    }
    else if (strcontainsnocase("adjetivo",L("word"))) {
        return "adj";
    }
    else if (strcontainsnocase("advérbio",L("word"))) {
        return "adv";
    }
    else if (strcontainsnocase("pronome",L("word"))) {
        return "pro";
    }
    else if (strcontainsnocase("preposição",L("word"))) {
        return "prep";
    }
    else if (strcontainsnocase("artigo",L("word"))) {
        return "det";
    }
    else if (strcontainsnocase("interjeição",L("word"))) {
        return "det";
    }
    else if (strcontainsnocase("conjunção",L("word"))) {
        return "conj";
    }
    return 0;
}

KBDump() {
    L("word") = down(G("words"));
    if (G("$isdirrun")) {
        L("filename") = G("$kbpath") + G("$inputparent") + ".dict";
    } else {
        L("filename") = G("$kbpath") + G("$inputhead") + ".dict";
    }
    G("debug") << L("filename") << "\n";
    
    L("dict") = openfile(L("filename"),1);
    while (L("word")) {
        L("meaning") = down(L("word"));
        while (L("meaning")) { 
            L("dict") << conceptname(L("word"));
            AddWordAttribute(L("dict"),L("meaning"),"pos");
            AddWordAttribute(L("dict"),L("meaning"),"lang");
            AddWordAttribute(L("dict"),L("meaning"),"root");
            AddWordAttribute(L("dict"),L("meaning"),"pessoa");
            AddWordAttribute(L("dict"),L("meaning"),"numero");
            AddWordAttribute(L("dict"),L("meaning"),"tempo");
            L("dict") << "\n";
            L("meaning") = next(L("meaning"));
        }
        L("word") = next(L("word"));
    }
    closefile(L("dict"));
}

AddWordAttribute(L("file"),L("meaning"),L("attr")) {
    L("val") = strval(L("meaning"),L("attr"));
    if (L("val")) {
        L("file") << " " << L("attr") << "=" << L("val");
    }
}

@@DECL
